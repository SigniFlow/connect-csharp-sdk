/*
 * SigniFlow OpenAPI Spec v1
 *
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SigniFlow.Connect.Client.OpenAPIDateConverter;

namespace SigniFlow.Connect.Model
{
    /// <summary>
    /// #### Add a step to the Workflow request.
    /// </summary>
    [DataContract(Name = "AddWorkflowStepV2Request")]
    public partial class AddWorkflowStepV2Request : IEquatable<AddWorkflowStepV2Request>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ActionField
        /// </summary>
        [DataMember(Name = "ActionField", IsRequired = true, EmitDefaultValue = false)]
        public ActionField ActionField { get; set; }
        /// <summary>
        /// Gets or Sets ProxyAllowedField
        /// </summary>
        [DataMember(Name = "ProxyAllowedField", IsRequired = true, EmitDefaultValue = false)]
        public ProxyAllowedField ProxyAllowedField { get; set; }
//    
//    
//        /// <summary>
//        /// Initializes a new instance of the <see cref="AddWorkflowStepV2Request" /> class.
//        /// </summary>
//        [JsonConstructorAttribute]
//        
//        protected AddWorkflowStepV2Request() { }
//        
//        
//    
//    
        /// <summary>
        /// Initializes a new instance of the <see cref="AddWorkflowStepV2Request" /> class.
        /// </summary>
        /// <param name="actionField">actionField (required).</param>
        /// <param name="cellField">Mobile number of participant (required).</param>
        /// <param name="docIDField">Document ID field. (required).</param>
        /// <param name="emailField">Participant email address. (required).</param>
        /// <param name="firstNameField">Participant firstname. (required).</param>
        /// <param name="languageCodeField">Participant 2 Digit ISO Language Code &#x60;en &#x3D; English es &#x3D; Spanish fr &#x3D; French ect&#x60; (required).</param>
        /// <param name="lastNameField">Participant last name. (required).</param>
        /// <param name="proxyAllowedField">proxyAllowedField (required).</param>
        /// <param name="tokenField">tokenField (required).</param>
        public AddWorkflowStepV2Request(ActionField actionField = default(ActionField), string cellField = default(string), string docIDField = default(string), string emailField = default(string), string firstNameField = default(string), string languageCodeField = default(string), string lastNameField = default(string), ProxyAllowedField proxyAllowedField = default(ProxyAllowedField), TokenField tokenField = default(TokenField))
        {
            this.ActionField = actionField;
            // to ensure "cellField" is required (not null)
            this.CellField = cellField ?? throw new ArgumentNullException("cellField is a required property for AddWorkflowStepV2Request and cannot be null");
            // to ensure "docIDField" is required (not null)
            this.DocIDField = docIDField ?? throw new ArgumentNullException("docIDField is a required property for AddWorkflowStepV2Request and cannot be null");
            // to ensure "emailField" is required (not null)
            this.EmailField = emailField ?? throw new ArgumentNullException("emailField is a required property for AddWorkflowStepV2Request and cannot be null");
            // to ensure "firstNameField" is required (not null)
            this.FirstNameField = firstNameField ?? throw new ArgumentNullException("firstNameField is a required property for AddWorkflowStepV2Request and cannot be null");
            // to ensure "languageCodeField" is required (not null)
            this.LanguageCodeField = languageCodeField ?? throw new ArgumentNullException("languageCodeField is a required property for AddWorkflowStepV2Request and cannot be null");
            // to ensure "lastNameField" is required (not null)
            this.LastNameField = lastNameField ?? throw new ArgumentNullException("lastNameField is a required property for AddWorkflowStepV2Request and cannot be null");
            this.ProxyAllowedField = proxyAllowedField;
            // to ensure "tokenField" is required (not null)
            this.TokenField = tokenField ?? throw new ArgumentNullException("tokenField is a required property for AddWorkflowStepV2Request and cannot be null");
        }

        /// <summary>
        /// Mobile number of participant
        /// </summary>
        /// <value>Mobile number of participant</value>
        [DataMember(Name = "CellField", IsRequired = true, EmitDefaultValue = false)]
        public string CellField { get; set; }

        /// <summary>
        /// Document ID field.
        /// </summary>
        /// <value>Document ID field.</value>
        [DataMember(Name = "DocIDField", IsRequired = true, EmitDefaultValue = false)]
        public string DocIDField { get; set; }

        /// <summary>
        /// Participant email address.
        /// </summary>
        /// <value>Participant email address.</value>
        [DataMember(Name = "EmailField", IsRequired = true, EmitDefaultValue = false)]
        public string EmailField { get; set; }

        /// <summary>
        /// Participant firstname.
        /// </summary>
        /// <value>Participant firstname.</value>
        [DataMember(Name = "FirstNameField", IsRequired = true, EmitDefaultValue = false)]
        public string FirstNameField { get; set; }

        /// <summary>
        /// Participant 2 Digit ISO Language Code &#x60;en &#x3D; English es &#x3D; Spanish fr &#x3D; French ect&#x60;
        /// </summary>
        /// <value>Participant 2 Digit ISO Language Code &#x60;en &#x3D; English es &#x3D; Spanish fr &#x3D; French ect&#x60;</value>
        [DataMember(Name = "LanguageCodeField", IsRequired = true, EmitDefaultValue = false)]
        public string LanguageCodeField { get; set; }

        /// <summary>
        /// Participant last name.
        /// </summary>
        /// <value>Participant last name.</value>
        [DataMember(Name = "LastNameField", IsRequired = true, EmitDefaultValue = false)]
        public string LastNameField { get; set; }

        /// <summary>
        /// Gets or Sets TokenField
        /// </summary>
        [DataMember(Name = "TokenField", IsRequired = true, EmitDefaultValue = false)]
        public TokenField TokenField { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddWorkflowStepV2Request {\n");
            sb.Append("  ActionField: ").Append(ActionField).Append("\n");
            sb.Append("  CellField: ").Append(CellField).Append("\n");
            sb.Append("  DocIDField: ").Append(DocIDField).Append("\n");
            sb.Append("  EmailField: ").Append(EmailField).Append("\n");
            sb.Append("  FirstNameField: ").Append(FirstNameField).Append("\n");
            sb.Append("  LanguageCodeField: ").Append(LanguageCodeField).Append("\n");
            sb.Append("  LastNameField: ").Append(LastNameField).Append("\n");
            sb.Append("  ProxyAllowedField: ").Append(ProxyAllowedField).Append("\n");
            sb.Append("  TokenField: ").Append(TokenField).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddWorkflowStepV2Request);
        }

        /// <summary>
        /// Returns true if AddWorkflowStepV2Request instances are equal
        /// </summary>
        /// <param name="input">Instance of AddWorkflowStepV2Request to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddWorkflowStepV2Request input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActionField == input.ActionField ||
                    this.ActionField.Equals(input.ActionField)
                ) && 
                (
                    this.CellField == input.CellField ||
                    (this.CellField != null &&
                    this.CellField.Equals(input.CellField))
                ) && 
                (
                    this.DocIDField == input.DocIDField ||
                    (this.DocIDField != null &&
                    this.DocIDField.Equals(input.DocIDField))
                ) && 
                (
                    this.EmailField == input.EmailField ||
                    (this.EmailField != null &&
                    this.EmailField.Equals(input.EmailField))
                ) && 
                (
                    this.FirstNameField == input.FirstNameField ||
                    (this.FirstNameField != null &&
                    this.FirstNameField.Equals(input.FirstNameField))
                ) && 
                (
                    this.LanguageCodeField == input.LanguageCodeField ||
                    (this.LanguageCodeField != null &&
                    this.LanguageCodeField.Equals(input.LanguageCodeField))
                ) && 
                (
                    this.LastNameField == input.LastNameField ||
                    (this.LastNameField != null &&
                    this.LastNameField.Equals(input.LastNameField))
                ) && 
                (
                    this.ProxyAllowedField == input.ProxyAllowedField ||
                    this.ProxyAllowedField.Equals(input.ProxyAllowedField)
                ) && 
                (
                    this.TokenField == input.TokenField ||
                    (this.TokenField != null &&
                    this.TokenField.Equals(input.TokenField))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.ActionField.GetHashCode();
                if (this.CellField != null)
                    hashCode = hashCode * 59 + this.CellField.GetHashCode();
                if (this.DocIDField != null)
                    hashCode = hashCode * 59 + this.DocIDField.GetHashCode();
                if (this.EmailField != null)
                    hashCode = hashCode * 59 + this.EmailField.GetHashCode();
                if (this.FirstNameField != null)
                    hashCode = hashCode * 59 + this.FirstNameField.GetHashCode();
                if (this.LanguageCodeField != null)
                    hashCode = hashCode * 59 + this.LanguageCodeField.GetHashCode();
                if (this.LastNameField != null)
                    hashCode = hashCode * 59 + this.LastNameField.GetHashCode();
                hashCode = hashCode * 59 + this.ProxyAllowedField.GetHashCode();
                if (this.TokenField != null)
                    hashCode = hashCode * 59 + this.TokenField.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CellField (string) minLength
            if(this.CellField != null && this.CellField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CellField, length must be greater than 1.", new [] { "CellField" });
            }

            // DocIDField (string) minLength
            if(this.DocIDField != null && this.DocIDField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DocIDField, length must be greater than 1.", new [] { "DocIDField" });
            }

            // EmailField (string) minLength
            if(this.EmailField != null && this.EmailField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EmailField, length must be greater than 1.", new [] { "EmailField" });
            }

            // FirstNameField (string) minLength
            if(this.FirstNameField != null && this.FirstNameField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FirstNameField, length must be greater than 1.", new [] { "FirstNameField" });
            }

            // LanguageCodeField (string) minLength
            if(this.LanguageCodeField != null && this.LanguageCodeField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LanguageCodeField, length must be greater than 1.", new [] { "LanguageCodeField" });
            }

            // LastNameField (string) minLength
            if(this.LastNameField != null && this.LastNameField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LastNameField, length must be greater than 1.", new [] { "LastNameField" });
            }

            yield break;
        }
    }

}
