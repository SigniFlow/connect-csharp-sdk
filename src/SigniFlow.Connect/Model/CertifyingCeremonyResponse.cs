/*
 * SigniFlow API
 *
 * API for Certifying Ceremonies
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@signiflow.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;


namespace SigniFlow.CertifyCeremonyAPI.Model
{
    /// <summary>
    /// CertifyingCeremonyResponse
    /// </summary>
    [DataContract(Name = "CertifyingCeremonyResponse")]
    public partial class CertifyingCeremonyResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CertifyingCeremonyResponse" /> class.
        /// </summary>
        /// <param name="ceremonyIDField">Ceremony ID.</param>
        /// <param name="resultField">Result of the certification.</param>
        /// <param name="signedDocumentField">Signed document information.</param>
        public CertifyingCeremonyResponse(int ceremonyIDField = default(int), string resultField = default(string), string signedDocumentField = default(string))
        {
            this.CeremonyIDField = ceremonyIDField;
            this.ResultField = resultField;
            this.SignedDocumentField = signedDocumentField;
        }

        /// <summary>
        /// Ceremony ID
        /// </summary>
        /// <value>Ceremony ID</value>
        [DataMember(Name = "CeremonyIDField", EmitDefaultValue = true)]
        public int CeremonyIDField { get; set; }

        /// <summary>
        /// Result of the certification
        /// </summary>
        /// <value>Result of the certification</value>
        [DataMember(Name = "ResultField", EmitDefaultValue = true)]
        public string ResultField { get; set; }

        /// <summary>
        /// Signed document information
        /// </summary>
        /// <value>Signed document information</value>
        [DataMember(Name = "SignedDocumentField", EmitDefaultValue = true)]
        public string SignedDocumentField { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CertifyingCeremonyResponse {\n");
            sb.Append("  CeremonyIDField: ").Append(CeremonyIDField).Append("\n");
            sb.Append("  ResultField: ").Append(ResultField).Append("\n");
            sb.Append("  SignedDocumentField: ").Append(SignedDocumentField).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

