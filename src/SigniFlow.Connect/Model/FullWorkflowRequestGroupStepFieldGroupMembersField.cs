/*
 * WorkFlow API
 *
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SigniFlow.Connect.Client.OpenAPIDateConverter;

namespace SigniFlow.Connect.Model
{
    /// <summary>
    /// FullWorkflowRequestGroupStepFieldGroupMembersField
    /// </summary>
    [DataContract]
    public partial class FullWorkflowRequestGroupStepFieldGroupMembersField :  IEquatable<FullWorkflowRequestGroupStepFieldGroupMembersField>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FullWorkflowRequestGroupStepFieldGroupMembersField" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FullWorkflowRequestGroupStepFieldGroupMembersField() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FullWorkflowRequestGroupStepFieldGroupMembersField" /> class.
        /// </summary>
        /// <param name="languageCodeField">languageCodeField (required).</param>
        /// <param name="userEmailField">userEmailField (required).</param>
        /// <param name="userFullNameField">userFullNameField (required).</param>
        /// <param name="userMobileNumberField">userMobileNumberField (required).</param>
        public FullWorkflowRequestGroupStepFieldGroupMembersField(string languageCodeField = default(string), string userEmailField = default(string), string userFullNameField = default(string), string userMobileNumberField = default(string))
        {
            // to ensure "languageCodeField" is required (not null)
            if (languageCodeField == null)
            {
                throw new InvalidDataException("languageCodeField is a required property for FullWorkflowRequestGroupStepFieldGroupMembersField and cannot be null");
            }
            else
            {
                this.LanguageCodeField = languageCodeField;
            }

            // to ensure "userEmailField" is required (not null)
            if (userEmailField == null)
            {
                throw new InvalidDataException("userEmailField is a required property for FullWorkflowRequestGroupStepFieldGroupMembersField and cannot be null");
            }
            else
            {
                this.UserEmailField = userEmailField;
            }

            // to ensure "userFullNameField" is required (not null)
            if (userFullNameField == null)
            {
                throw new InvalidDataException("userFullNameField is a required property for FullWorkflowRequestGroupStepFieldGroupMembersField and cannot be null");
            }
            else
            {
                this.UserFullNameField = userFullNameField;
            }

            // to ensure "userMobileNumberField" is required (not null)
            if (userMobileNumberField == null)
            {
                throw new InvalidDataException("userMobileNumberField is a required property for FullWorkflowRequestGroupStepFieldGroupMembersField and cannot be null");
            }
            else
            {
                this.UserMobileNumberField = userMobileNumberField;
            }

        }

        /// <summary>
        /// Gets or Sets LanguageCodeField
        /// </summary>
        [DataMember(Name="LanguageCodeField", EmitDefaultValue=true)]        public string LanguageCodeField { get; set; }

        /// <summary>
        /// Gets or Sets UserEmailField
        /// </summary>
        [DataMember(Name="UserEmailField", EmitDefaultValue=true)]        public string UserEmailField { get; set; }

        /// <summary>
        /// Gets or Sets UserFullNameField
        /// </summary>
        [DataMember(Name="UserFullNameField", EmitDefaultValue=true)]        public string UserFullNameField { get; set; }

        /// <summary>
        /// Gets or Sets UserMobileNumberField
        /// </summary>
        [DataMember(Name="UserMobileNumberField", EmitDefaultValue=true)]        public string UserMobileNumberField { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FullWorkflowRequestGroupStepFieldGroupMembersField {\n");
            sb.Append("  LanguageCodeField: ").Append(LanguageCodeField).Append("\n");
            sb.Append("  UserEmailField: ").Append(UserEmailField).Append("\n");
            sb.Append("  UserFullNameField: ").Append(UserFullNameField).Append("\n");
            sb.Append("  UserMobileNumberField: ").Append(UserMobileNumberField).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FullWorkflowRequestGroupStepFieldGroupMembersField);
        }

        /// <summary>
        /// Returns true if FullWorkflowRequestGroupStepFieldGroupMembersField instances are equal
        /// </summary>
        /// <param name="input">Instance of FullWorkflowRequestGroupStepFieldGroupMembersField to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FullWorkflowRequestGroupStepFieldGroupMembersField input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LanguageCodeField == input.LanguageCodeField ||
                    (this.LanguageCodeField != null &&
                    this.LanguageCodeField.Equals(input.LanguageCodeField))
                ) && 
                (
                    this.UserEmailField == input.UserEmailField ||
                    (this.UserEmailField != null &&
                    this.UserEmailField.Equals(input.UserEmailField))
                ) && 
                (
                    this.UserFullNameField == input.UserFullNameField ||
                    (this.UserFullNameField != null &&
                    this.UserFullNameField.Equals(input.UserFullNameField))
                ) && 
                (
                    this.UserMobileNumberField == input.UserMobileNumberField ||
                    (this.UserMobileNumberField != null &&
                    this.UserMobileNumberField.Equals(input.UserMobileNumberField))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LanguageCodeField != null)
                    hashCode = hashCode * 59 + this.LanguageCodeField.GetHashCode();
                if (this.UserEmailField != null)
                    hashCode = hashCode * 59 + this.UserEmailField.GetHashCode();
                if (this.UserFullNameField != null)
                    hashCode = hashCode * 59 + this.UserFullNameField.GetHashCode();
                if (this.UserMobileNumberField != null)
                    hashCode = hashCode * 59 + this.UserMobileNumberField.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {

            // LanguageCodeField (string) minLength
            if(this.LanguageCodeField != null && this.LanguageCodeField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LanguageCodeField, length must be greater than 1.", new [] { "LanguageCodeField" });
            }
 

            // UserEmailField (string) minLength
            if(this.UserEmailField != null && this.UserEmailField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UserEmailField, length must be greater than 1.", new [] { "UserEmailField" });
            }
 

            // UserFullNameField (string) minLength
            if(this.UserFullNameField != null && this.UserFullNameField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UserFullNameField, length must be greater than 1.", new [] { "UserFullNameField" });
            }
 

            // UserMobileNumberField (string) minLength
            if(this.UserMobileNumberField != null && this.UserMobileNumberField.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UserMobileNumberField, length must be greater than 1.", new [] { "UserMobileNumberField" });
            }
 
            yield break;
        }
    }

}
